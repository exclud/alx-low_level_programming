# Makefile for building the 'school' executable

# Compiler
CC = gcc

# Source files
SRC = main.c school.c

# Object files (automatically generated from SRC)
OBJ = $(SRC:.c=.o)

# Executable name
NAME = school

# Program to delete files
RM = rm -f

# Compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# Rule to build the executable
all: $(NAME)

# Rule to build the executable from object files
$(NAME): $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

# Rule to compile individual source files to object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to clean Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ \#*\# $(NAME)

# Rule to delete object files
oclean:
	$(RM) $(OBJ)

# Rule to delete all Emacs and Vim temporary files, executable, and object files
fclean: clean oclean

# Rule to force recompilation of all source files
re: fclean all

# Phony targets to ensure these rules are always executed
.PHONY: all clean oclean fclean re
